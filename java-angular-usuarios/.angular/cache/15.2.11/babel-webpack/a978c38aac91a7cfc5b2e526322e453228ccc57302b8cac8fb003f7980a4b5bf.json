{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsuarioService {\n  constructor(clientehttp) {\n    this.clientehttp = clientehttp;\n    this.urlBase = \"http://localhost:4000/user\";\n  }\n  obtenerUsuarios() {\n    return this.clientehttp.get(this.urlBase + \"/users\");\n  }\n  agregarUsuario(usuario) {\n    return this.clientehttp.post(this.urlBase + \"/user\", usuario);\n  }\n  obtenerUsuarioPorId(id) {\n    this.clientehttp.get();\n  }\n  static {\n    this.ɵfac = function UsuarioService_Factory(t) {\n      return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsuarioService,\n      factory: UsuarioService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,WAAsB;IAAtB,gBAAW,GAAXA,WAAW;IAFvB,YAAO,GAAC,4BAA4B;EAEE;EAE9CC,eAAe;IACb,OAAO,IAAI,CAACD,WAAW,CAACE,GAAG,CAAY,IAAI,CAACC,OAAO,GAAC,QAAQ,CAAC;EAE/D;EAEAC,cAAc,CAACC,OAAgB;IAE7B,OAAO,IAAI,CAACL,WAAW,CAACM,IAAI,CAAC,IAAI,CAACH,OAAO,GAAC,OAAO,EAACE,OAAO,CAAC;EAC5D;EAEAE,mBAAmB,CAACC,EAAS;IAC3B,IAAI,CAACR,WAAW,CAACE,GAAG,EAAW;EACjC;;;uBAlBWJ,cAAc;IAAA;EAAA;;;aAAdA,cAAc;MAAAW,SAAdX,cAAc;MAAAY,YAFb;IAAM;EAAA","names":["UsuarioService","constructor","clientehttp","obtenerUsuarios","get","urlBase","agregarUsuario","usuario","post","obtenerUsuarioPorId","id","factory","providedIn"],"sourceRoot":"","sources":["D:\\cursos\\java\\javacursos\\usuarios-app-java-angular\\src\\app\\usuario.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Usuario } from './usuario';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  private urlBase=\"http://localhost:4000/user\";\n\n  constructor(private clientehttp:HttpClient) { }\n\n  obtenerUsuarios():Observable<Usuario[]>{\n    return this.clientehttp.get<Usuario[]>(this.urlBase+\"/users\");\n\n  }\n\n  agregarUsuario(usuario: Usuario):Observable<Object>{\n\n    return this.clientehttp.post(this.urlBase+\"/user\",usuario);\n  }\n\n  obtenerUsuarioPorId(id:number){\n    this.clientehttp.get<Usuario>()\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}